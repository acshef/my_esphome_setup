esphome:
  name: $NODE_NAME
  name_add_mac_suffix: false
  friendly_name: $FRIENDLY_NAME
  build_path: .build/${NODE_NAME}/

substitutions:
  # NODE_NAME
  FRIENDLY_NAME: $NODE_NAME
  LOG_LEVEL: NONE

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "$NODE_NAME AP"
    password: !secret wifi_password

external_components:
  - source: my_components

captive_portal:

logger:
  level: $LOG_LEVEL

# Enable Home Assistant API
api:

# https://esphome.io/components/time/homeassistant
time:
  - platform: homeassistant
    id: homeassistant_time

ota:
  platform: esphome

button:
  - platform: restart
    id: restart_button
    name: Restart

binary_sensor:
  - platform: status
    name: Status
    entity_category: diagnostic

sensor:
  - platform: wifi_signal
    id: wifi_strength
    name: Wifi Signal
    update_interval: 60s
    entity_category: diagnostic
  - platform: uptime
    id: uptime_raw
    update_interval: 60s
    type: seconds
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_raw).raw_state);
              int weeks = seconds / 604800; // 7 * 24 * 3600 = 604800
              seconds = seconds % 604800;   // 7 * 24 * 3600 = 604800
              int days = seconds / 86400;   // 24 * 60 * 60 = 86400
              seconds = seconds % 86400;    // 24 * 60 * 60 = 86400
              int hours = seconds / 3600;   // 60 * 60 = 3600
              seconds = seconds % 3600;     // 60 * 60 = 3600
              int minutes = seconds / 60;
              seconds = seconds % 60;
              if (weeks > 0) {
                return (String(weeks) + "w " + String(days) + "d").c_str();
              }
              if (days > 0) {
                return (String(days) + "d " + String(hours) + "h").c_str();
              }
              if (hours > 0) {
                return (String(hours) + "h " + String(minutes) + "m").c_str();
              }
              if (minutes > 0) {
                return (String(minutes) + "m " + String(seconds) + "s").c_str();
              }
              return (String(seconds) + "s").c_str();

text_sensor:
  - platform: version
    id: esp_version
    name: ESPHome Version
    hide_timestamp: True
    entity_category: diagnostic
  - platform: wifi_info
    ip_address:
      name: IP Address
      id: ip_address
      icon: "mdi:ip-network"
      entity_category: diagnostic
    mac_address:
      name: MAC Address
      id: mac_address
      icon: "mdi:tag-text"
      entity_category: diagnostic
  - platform: template
    name: Uptime
    id: uptime_human
    icon: mdi:timer-outline
    entity_category: diagnostic

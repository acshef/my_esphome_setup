packages:
  device_base: !include common/device_base.yaml

esp8266:
  board: esp01_1m

substitutions:
  NODE_NAME: bug-zapper
  FRIENDLY_NAME: Bug Zapper

globals:
  - id: switch_enabled
    type: bool
    initial_value: "true"
    restore_value: true
  - id: relay_on
    type: bool
    initial_value: "false"

binary_sensor:
  - platform: gpio
    id: physical_button
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
      inverted: True
    filters:
      - delayed_on_off: 50ms
    on_press:
      then:
        - delay: 1 sec
        - switch.toggle: zapper
  - platform: gpio
    id: internal_button
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    filters:
      - delayed_on_off: 50ms
    on_multi_click:
      - timing:
          - ON for at most 5s
          - OFF for at least 0.1s
        then:
          - switch.toggle: zapper
      - timing:
          - ON for at least 10s
          - OFF for at least 0.1s
        then:
          - button.press: restart_button

output:
  - platform: gpio
    pin: GPIO12
    id: relay

switch:
  # - platform: gpio
  #   id: relay_old
  #   name: Bug Zapper
  #   icon: mdi:shield-bug-outline
  #   pin: GPIO12
  - platform: template
    name: Enabled
    entity_category: config
    restore_mode: DISABLED
    lambda: "return id(switch_enabled);"
    turn_on_action:
      - lambda: "id(switch_enabled) = true;"
    turn_off_action:
      - lambda: "id(switch_enabled) = false;"
      - switch.turn_off: zapper
  - platform: template
    id: zapper
    name: Bug Zapper
    icon: mdi:shield-bug-outline
    lambda: "return id(relay_on);"
    turn_on_action:
      - if:
          condition:
            lambda: "return id(switch_enabled);"
          then:
            - lambda: "id(relay_on) = true;"
            - output.turn_on: relay
    turn_off_action:
      - lambda: "id(relay_on) = false;"
      - output.turn_off: relay

status_led:
  pin:
    number: GPIO13
    inverted: yes
